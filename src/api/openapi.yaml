openapi: 3.0.0
info:
  title: Pollen8 API
  version: 1.0.0
  description: API specification for the Pollen8 professional networking platform
servers:
  - url: https://api.pollen8.com/v1
    description: Production server
  - url: https://staging-api.pollen8.com/v1 
    description: Staging server
  - url: http://localhost:3000/v1
    description: Local development server
paths:
  /auth/send-verification:
    post:
      summary: Send verification code
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumber'
      responses:
        '200':
          description: Verification code sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Invalid phone number  
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/verify:
    post:
      summary: Verify code and login
      tags:
        - Authentication  
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationRequest'
      responses:
        '200':
          description: Verification successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid verification code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/logout:
    post:
      summary: Logout user
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/{userId}:
    get:
      summary: Get user profile
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update user profile
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          description: User profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /connections:
    post:
      summary: Create a new connection
      tags:
        - Connections
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionRequest'
      responses:
        '201':
          description: Connection created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /connections/{userId}:
    get:
      summary: Get user connections
      tags:
        - Connections
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User connections retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Connection'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /invites:
    post:
      summary: Create a new invite
      tags:
        - Invites
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Invite created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invite'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Get user invites
      tags:
        - Invites
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User invites retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invite'
  /network-value/{userId}:
    get:
      summary: Get user network value
      tags:
        - Network Value
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Network value retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkValue'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    PhoneNumber:
      type: object
      properties:
        phoneNumber:
          type: string
      required:
        - phoneNumber
    VerificationRequest:
      type: object  
      properties:
        phoneNumber:
          type: string
        code:
          type: string
      required:
        - phoneNumber
        - code
    AuthResponse:
      type: object
      properties:
        token:
          type: string
        user:
          $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        id:
          type: string
        phoneNumber:
          type: string
        username:
          type: string
        location:
          type: string
        industries:
          type: array
          items:
            type: string
        interests:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        lastLogin:
          type: string
          format: date-time
    UserUpdateRequest:
      type: object
      properties:
        username:
          type: string
        location:
          type: string
        industries:
          type: array
          items:
            type: string
        interests:
          type: array
          items:
            type: string
    Connection:
      type: object
      properties:
        id:
          type: string
        userId1:
          type: string
        userId2:
          type: string
        strength:
          type: number
        connectedAt:
          type: string
          format: date-time
    ConnectionRequest:
      type: object
      properties:
        userId:
          type: string
      required:
        - userId
    Invite:
      type: object
      properties:
        id:
          type: string
        creatorId:
          type: string
        inviteCode:
          type: string
        clicks:
          type: integer
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
    NetworkValue:
      type: object
      properties:
        userId:
          type: string
        value:
          type: number
        calculatedAt:
          type: string
          format: date-time
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
            message:
              type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT